// <auto-generated />
using System;
using IDN.Data.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Data.Migrations
{
    [DbContext(typeof(ContextApp))]
    [Migration("20240103185135_Add_Geojson")]
    partial class Add_Geojson
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.11")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("IDN.Core.Empresa.Models.MEmpresa", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Bairro")
                        .HasColumnType("varchar(255)");

                    b.Property<string>("CEP")
                        .HasColumnType("varchar(8)");

                    b.Property<string>("CNPJ")
                        .HasColumnType("varchar(14)");

                    b.Property<decimal?>("CapitalSocial")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("CnaeDescricao")
                        .HasColumnType("varchar(255)");

                    b.Property<string>("CnaeFiscalPrincipal")
                        .HasColumnType("varchar(7)");

                    b.Property<string>("DataExclusaoMEI")
                        .HasColumnType("varchar(8)");

                    b.Property<string>("DataExclusaoSimples")
                        .HasColumnType("varchar(8)");

                    b.Property<string>("DataInicioAtividade")
                        .HasColumnType("varchar(8)");

                    b.Property<string>("DataOpcaoMEI")
                        .HasColumnType("varchar(8)");

                    b.Property<string>("DataOpcaoSimples")
                        .HasColumnType("varchar(8)");

                    b.Property<string>("DataSituacaoCadastral")
                        .HasColumnType("varchar(8)");

                    b.Property<string>("IdentificadorMatrizFilial")
                        .HasColumnType("varchar(1)");

                    b.Property<string>("Logradouro")
                        .HasColumnType("varchar(255)");

                    b.Property<string>("Municipio")
                        .HasColumnType("varchar(50)");

                    b.Property<string>("NaturezaJuridica")
                        .HasColumnType("varchar(255)");

                    b.Property<string>("NomeFantasia")
                        .HasColumnType("varchar(255)");

                    b.Property<string>("Numero")
                        .HasColumnType("varchar(10)");

                    b.Property<string>("OpcaoMEI")
                        .HasColumnType("varchar(1)");

                    b.Property<string>("OpcaoSimples")
                        .HasColumnType("varchar(1)");

                    b.Property<string>("PorteEmpresa")
                        .HasColumnType("varchar(2)");

                    b.Property<string>("RazaoSocial")
                        .HasColumnType("varchar(255)");

                    b.Property<string>("SituacaoCadastral")
                        .HasColumnType("varchar(2)");

                    b.Property<string>("UF")
                        .HasColumnType("varchar(2)");

                    b.HasKey("Id");

                    b.ToTable("Empresas");
                });

            modelBuilder.Entity("IDN.Core.Geojson.Models.MCoordinates", b =>
                {
                    b.Property<Guid?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("MGeometryId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<double>("X")
                        .HasColumnType("float");

                    b.Property<double>("Y")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.HasIndex("MGeometryId");

                    b.ToTable("GeojsonCoordinates");
                });

            modelBuilder.Entity("IDN.Core.Geojson.Models.MFeatures", b =>
                {
                    b.Property<Guid?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("GeometryId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("PropertiesId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Type")
                        .HasColumnType("varchar(255)");

                    b.HasKey("Id");

                    b.HasIndex("GeometryId");

                    b.HasIndex("PropertiesId");

                    b.ToTable("GeojsonFeatures");
                });

            modelBuilder.Entity("IDN.Core.Geojson.Models.MGeometry", b =>
                {
                    b.Property<Guid?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Type")
                        .HasColumnType("varchar(255)");

                    b.HasKey("Id");

                    b.ToTable("GeojsonGeometries");
                });

            modelBuilder.Entity("IDN.Core.Geojson.Models.MProperties", b =>
                {
                    b.Property<Guid?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Geocode")
                        .HasColumnType("varchar(255)");

                    b.Property<string>("Name")
                        .HasColumnType("varchar(255)");

                    b.HasKey("Id");

                    b.ToTable("GeojsonProperties");
                });

            modelBuilder.Entity("IDN.Core.Municipio.Models.MMunicipio", b =>
                {
                    b.Property<string>("Codigo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Descricao")
                        .HasColumnType("nvarchar(max)");

                    b.ToTable("Municipios");
                });

            modelBuilder.Entity("IDN.Core.Geojson.Models.MCoordinates", b =>
                {
                    b.HasOne("IDN.Core.Geojson.Models.MGeometry", null)
                        .WithMany("Coordinates")
                        .HasForeignKey("MGeometryId");
                });

            modelBuilder.Entity("IDN.Core.Geojson.Models.MFeatures", b =>
                {
                    b.HasOne("IDN.Core.Geojson.Models.MGeometry", "Geometry")
                        .WithMany()
                        .HasForeignKey("GeometryId");

                    b.HasOne("IDN.Core.Geojson.Models.MProperties", "Properties")
                        .WithMany()
                        .HasForeignKey("PropertiesId");

                    b.Navigation("Geometry");

                    b.Navigation("Properties");
                });

            modelBuilder.Entity("IDN.Core.Geojson.Models.MGeometry", b =>
                {
                    b.Navigation("Coordinates");
                });
#pragma warning restore 612, 618
        }
    }
}
