@page "/maps/sp/{m?}"
@model Pages.Maps.RegionsModel
@{
    Layout = "_LayoutMap";
    ViewData["Title"] = "Densidade Empresarial do Estado de SP";
    ViewData["ActivePage"] = Shared.NavPages.MapCompanies;
}

@* <div id="div-flutuante-l">
    <div class="conteudo">
        <h6>@Model.Titulo?.ToUpper()</h6>
        <div class="divider"></div>
        @Model.Empresasativas
        <ul class="browser_default">
            Composição produtiva:
            @foreach (var item in @Model.Setores?.OrderByDescending(s => s.Value)!)
            {
                <li>@item.Key @item.Value %</li>
            }
        </ul>
        <div class="divider margin-b-10"></div>
        <a class="btn" asp-page="/Index">Voltar</a>
        <a asp-page="/Empresas/Index" asp-route-m="@Model.Cidade" class="btn"
            title="Ver detalhes da cidade @Model.Cidade">Ver Mais</a>
    </div>
</div> *@


<div class="container-map-charts">
    <div class="w-45p">
        <div id="map" class="card map"></div>
    </div>
    <div class="w-55p">
        <div class="charts">
            <div class="column-container flex-wrap gap-10">
                @* Acumulado *@
                <div class="card column-p6">
                    <div class="card-header activator">
                        Empresas<i class="material-icons right deep-orange-text">help</i>
                    </div>
                    <div class="column-container flex-wrap margin-0 width-100 no-gap">
                        <div class="w-50p">
                            <div id="chart1"></div>
                        </div>
                        <div class="w-50p borderl-l padding-5">
                            <div class="overflow-auto max-height-280 padding-t-10 padding-r-10">                                
                                @foreach (var item in Model!.LReports!.Quantitativo!.Where(s => s.Key != "Baixada")!)
                                {
                                    var _key = @item.Key;
                                    <p class="text-color-grey "><span class="font-size-10">- @_key?.ToUpper()</span>
                                        <span class="new bg-color-grey badge" data-badge-caption="@item.Value"></span>
                                    </p>
                                    <div class="divider"></div>
                                }
                            </div>
                        </div>
                        @* <div class="width-100 borderl-t padding-5 bg-color-green">
                            <div class="overflow-auto">                                                       
                                @foreach (var item in Model.LReports.Quantitativo_Ano!.Where(s => s.Key == "Ativa")!)
                                {
                                    var _key = @item.Key;
                                    <p class="text-color-grey "><span class="font-size-14">* Formalizadas @DateTime.Now.Year</span>
                                        <span class="new bg-color-grey badge" data-badge-caption="@item.Value"></span>
                                    </p>
                                    <div class="divider"></div> 
                                }

                            </div>
                        </div> *@
                    </div>
                    <div class="card-reveal">
                        <span class="card-title">Detalhes<i class="material-icons right red-text">close</i></span>
                        <div class="padding-10">
                            <p>
                                O gráfico mostra o quantiativo total das empresas consolidadas no (os) municipio (os) até a data
                                da ultinma extração (@Model.LastDataExtraction).
                                A lista ao lado do gráfico mostra o quantitativo das empresas separadas por situação cadastral.
                            </p>
                        </div>
                    </div>
                    <div class="card-action margin-0 padding-5 bg-color-green">
                        @foreach (var item in Model.LReports.Quantitativo_Ano!.Where(s => s.Key == "Ativa")!)
                            {
                                var _key = @item.Key;
                                <p class="text-color-dark"><span class="font-size-14">Formalizadas @DateTime.Now.Year</span>
                                    <span class="new bg-color-grey badge" data-badge-caption="@item.Value"></span>
                                </p>
                                @* <div class="divider"></div> *@
                            }
                    </div>
                </div>
                <div class="card column-w4">
                    <div class="card-header activator">
                        Top 3 Setores @DateTime.Now.Year<i class="material-icons right deep-orange-text">help</i>
                    </div>                      
                    <div class="overflow-auto max-height-280 padding-5">                        
                        @foreach (var item in Model.LReports!.Top3Atividades_Ano!)
                        {
                            <p class="bg-color-grey text-color-light padding-5">@item.Key</p>
                            @foreach (var subitem in item.Value)
                            {
                                <p class="text-color-grey"><span class="font-size-10">- @subitem.Key</span>
                                    <span class="new bg-color-grey badge" data-badge-caption="@subitem.Value"></span>
                                </p>
                                <div class="divider"></div>
                            }
                        }
                    </div>
                    <div class="card-reveal">
                        <span class="card-title">Detalhes<i class="material-icons right red-text">close</i></span>
                        <div class="padding-10">
                            <p>
                                O gráfico mostra o quantiativo total das empresas consolidadas no (os) municipio (os) até a data
                                da ultinma extração (@Model.LastDataExtraction).
                                A lista ao lado do gráfico mostra o quantitativo das empresas separadas por situação cadastral.
                            </p>
                        </div>
                    </div>
                </div>

                @* Historico 12 meses *@                
                <div class="card column-p0 width-100">
                    <div class="card-header activator">
                        Empresas Formalizadas/Baixadas<i class="material-icons left">
                            date_range
                        </i><i class="material-icons right deep-orange-text">help</i>
                    </div>
                    <div id="chart9" class="padding-l-10"></div>

                    <div class="card-reveal">
                        <span class="card-title">Detalhes<i class="material-icons right red-text">close</i></span>
                        <div class="padding-10">
                            Histórico de Novas Empresas e Empresas Baixadas nos ultimos 12 meses
                            <p>Relação e a evolução das novas empresas formalizadas mês a mês em comparação com
                                as
                                empresas baixadas mês a mês nos ultimos 12 meses</p>
                        </div>
                    </div>
                </div>
                
                @* Fiscal *@
                <div class="card column-p0 width-100">
                    <div class="card-header activator">
                        Porte/Fiscal<i class="material-icons right deep-orange-text">help</i>
                    </div>
                    <div class="column-container margin-0 width-100 no-gap">
                        <div class="w-50p">
                            <div id="chart3"></div>
                        </div>
                        <div class="w-25p borderl-l padding-5">
                            <div class="overflow-auto max-height-280 padding-t-10 padding-r-10">
                                @DateTime.Now.Year
                                @foreach (var item in Model.LReports.Fiscal_Ano!)
                                {
                                    var _key = @item.Key;
                                    <p class="text-color-grey "><span class="font-size-10">- @_key?.ToUpper()</span>
                                        <span class="new bg-color-grey badge" data-badge-caption="@item.Value"></span>
                                    </p>
                                    <div class="divider"></div>
                                }

                            </div>
                        </div>
                        <div class="w-25p borderl-l padding-5">
                            <div class="overflow-auto max-height-280 padding-t-10 padding-r-10">
                                Acumulado
                                @foreach (var item in Model.LReports.Fiscal!)
                                {
                                    var _key = @item.Key;
                                    <p class="text-color-grey "><span class="font-size-10">- @_key?.ToUpper()</span>
                                        <span class="new bg-color-grey badge" data-badge-caption="@item.Value"></span>
                                    </p>
                                    <div class="divider"></div>
                                }
                            </div>
                        </div>
                    </div>

                    <div class="card-reveal">
                        <span class="card-title">Detalhes<i class="material-icons right red-text">close</i></span>
                        <div class="padding-10">
                            <br />A Receita Federal do Brasil classifica as empresas de acordo com o seu porte, levando em
                            consideração o faturamento anual.
                            <br />- Microempresa (ME): receita bruta anual igual ou inferior a R$ 360 mil.
                            <br />- Empresa de Pequeno Porte (EPP): receita bruta anual superior a R$ 360 mil e igual ou
                            inferior a R$ 4,8 milhões.
                            <br />- Empresa de Médio Porte (EMP): receita bruta anual superior a R$ 4,8 milhões e igual ou
                            inferior
                            a R$ 300 milhões.
                            <br />- Empresa de Grande Porte (GP): receita bruta anual superior a R$ 300 milhões.
                            <br />Na apresentação dos dados EMP e GP são agrupadas como "DEMAIS".
                            <p>
                                No gráficio, é realizado o cruzamento dos dados das empresas agrupadas por Porte em relação as
                                empresas agrupadas por regime fiscal.
                                Dessa forma podemos entender a composição das empresa classificadas por porte x regime
                                tributário.
                            </p>
                        </div>
                    </div>
                </div>

                @* perfil Etário *@
                <div class="card column-p5">
                    <div class="card-header activator">
                        Perfil Etário<i class="material-icons right deep-orange-text">help</i>
                    </div>
                    <div id="chart5"></div>

                    <div class="card-reveal">
                        <span class="card-title">Detalhes<i class="material-icons right red-text">close</i></span>
                        <div class="padding-10">
                            <p>
                                O gráfico mostra o perfil étario das empresas atuantes no (os) municipio (os) agrupados por
                                faixas.
                            </p>
                        </div>
                    </div>
                </div>

                @* Rotatividade *@
                <div class="card column-p5">
                    <div class="card-header activator">
                        Rotatividade Empresarial<i class="material-icons right deep-orange-text">help</i>
                    </div>
                    <div id="chart6"></div>

                    <div class="card-reveal">
                        <span class="card-title">Detalhes<i class="material-icons right red-text">close</i></span>
                        <div class="padding-10">
                            <p>A rotatividade empresarial em municípios é um indicador que mede a frequência com que as empresas
                                abrem e fecham em um determinado período de tempo. Esse indicador é importante para avaliar o
                                dinamismo da economia local e o ambiente de negócios do município.
                                Quanto menor o indice, melhor para desenvolver o empreendedorismo.
                            </p>
                        </div>
                    </div>
                </div>

                @* Evolução setorial *@
                <div class="card column-p5">

                    <div class="card-header activator">
                        Crescimento Setorial<i class="material-icons left">
                            date_range
                        </i><i class="material-icons right deep-orange-text">help</i>
                    </div>
                    <div id="chart10"></div>

                    <div class="card-reveal">
                        <span class="card-title">Detalhes<i class="material-icons right red-text">close</i></span>
                        <div class="padding-10">
                            <p>
                                No gráfico, é possível acompanhar a evolução setorial acumulativa do (os) municipio (os) ano a
                                ano
                                nos ultimos 10 anos!
                            </p>
                        </div>
                    </div>
                </div>
                <div class="card column-p5">

                    <div class="card-header activator">
                        Taxa de Crescimento Setorial<i class="material-icons left">
                            date_range
                        </i><i class="material-icons right deep-orange-text">help</i>
                    </div>
                    <div id="chart_txsetorial"></div>

                    <div class="card-reveal">
                        <span class="card-title">Detalhes<i class="material-icons right red-text">close</i></span>
                        <div class="padding-10">
                            <p>
                                No gráfico, é indicado a taxa de crescimento setorial do (os) municipio (os), onde é possivel
                                acompanhar e ver o acrescimo
                                ou
                                decréscimo dos setores ano a ano.
                            </p>
                        </div>
                    </div>
                </div>

                @* Atividades *@
                <div class="card column-p0 width-100">

                    <div class="card-header activator">
                        Setores<i class="material-icons right deep-orange-text">help</i>
                    </div>
                    <div class="column-container margin-0 width-100 no-gap">
                        <div class="column-p5">
                            <div id="chart4"></div>
                        </div>
                        <div class="column-p5 borderl-l padding-l-10">
                            <div class="overflow-auto max-height-250 padding-t-10 padding-r-10">
                                @foreach (var item in Model.LReports!.TAtividades!)
                                {
                                    <p class="bg-color-grey text-color-light padding-5">@item.Key</p>
                                    @foreach (var subitem in item.Value)
                                    {
                                        <p class="text-color-grey "><span class="font-size-10">- @subitem.Key</span>
                                            <a class="font-size-12 waves-effect waves-light padding-5 bg-color-grey right modal-trigger"
                                                href="#modal1">@subitem.Value</a>
                                            @* <span class="new bg-color-grey badge" data-badge-caption="@subitem.Value"></span> *@
                                        </p>
                                        <div class="divider"></div>
                                    }
                                }
                            </div>
                        </div>
                    </div>

                    <div class="card-reveal">
                        <span class="card-title">Detalhes<i class="material-icons right red-text">close</i></span>
                        <div class="padding-10">
                            <p>O gráfico mostras a composição dos setores produtivos de todas empresas consolidadas até a data
                                da ultima extração (@Model.LastDataExtraction), agrupando-as conforme o
                                setor de atuação de sua atividade principal.</p>
                            <p>
                                Ao lado do gráfico, é possível conferir todas as atividades exercidas agrupadas por setor.
                            </p>
                        </div>
                    </div>
                </div>
                <div class="card column-p0 width-100">

                    <div class="card-header activator">
                        Natureza Jurídica<i class="material-icons right deep-orange-text">help</i>
                    </div>
                    <div class="column-container margin-0 width-100 no-gap">
                        <div class="column-p5">
                            <div id="chart_nj"></div>
                        </div>
                        <div class="column-p5 borderl-l padding-l-10">
                            <div class="overflow-auto max-height-250 padding-t-10 padding-r-10">
                                @foreach (var item in Model.LReports.NaturezaJuridica!)
                                {
                                    var _key = @item.Key?.Remove(0, 5);
                                    <p class="text-color-grey "><span class="font-size-10">- @_key?.ToUpper()</span>
                                        <span class="new bg-color-grey badge" data-badge-caption="@item.Value"></span>
                                    </p>
                                    <div class="divider"></div>
                                }
                            </div>
                        </div>
                    </div>

                    <div class="card-reveal">
                        <span class="card-title">Detalhes<i class="material-icons right red-text">close</i></span>
                        <div class="padding-10">
                            <br />A natureza jurídica determina o regime jurídico aplicável à
                            empresa. Por exemplo, as empresas de natureza empresária limitada têm responsabilidade limitada, o
                            que
                            significa que os sócios não respondem com seus bens pessoais pelas dívidas da empresa.

                            <br />Em resumo, a natureza jurídica é uma informação importante que identifica o tipo de
                            organização de
                            uma empresa e determina o regime jurídico aplicável a ela.
                            <p>O gráfico mostra os 5 mais utilizados, e, a lista ao lado os dados completos.</p>
                        </div>
                    </div>
                </div>

            </div>
        </div>
    </div>
</div>


<script>

    const _modelcidade = "@Model.Cidade";
    const spanResult_r = document.getElementById("span_result");
    spanResult_r.textContent = "@Model.Span_Result?.ToUpper()";

    // Criar o mapa Leaflet
    var map = L.map('map').setView([-22.902778, -48.28125], 7); // Centro inicial do mapa do estado de sp

    var info = L.control();

    //Não mostrar essas infor no map detalhes
    info.onAdd = function (map) {
        this._div = L.DomUtil.create('div', 'info'); // create a div with a class "info"
        this.update();
        return this._div;
        };

        // method that we will use to update the control based on feature properties passed
    info.update = function (props) {
        this._div.innerHTML =
        @* '<div class="center margin-b-10"><h6>Densidade Empresarial do Estado de SP<h6></div>'
        + '<div class="divider"></div>'
        +*@ (props ? 
        'Município: <span class="text-uppercase">' + props.name + '</span><br />Empresas: ' + props.empresas + '<br />Setor: ' + props.setor : 'Mova o mouse sobre o mapa');
        };

    function getColor(d) {
        return d > 320000 ? '#34000f' :
            d > 160000 ? '#4d0017' :
                d > 80000 ? '#800026' :
                    d > 40000 ? '#BD0026' :
                        d > 25000 ? '#E31A1C' :
                            d > 20000 ? '#FC4E2A' :
                                d > 15000 ? '#FD8D3C' :
                                    d > 10000 ? '#FEB24C' :
                                        d > 5000 ? '#FED976' :
                                            '#FFEDA0';
    }

    // Função para estilizar as áreas GeoJSON com base no valor da propriedade "empresas"
    function style(feature) {
        return {
            fillColor: getColor(feature.properties.empresas),
            weight: 1,
            opacity: 1,
            color: 'black',
            //dashArray: '3',
            fillOpacity: 0.7
        };
    }

    function zoomToFeature(e) {
        map.fitBounds(e.target.getBounds());

        var layer = e.target;
        const url = '/maps/d/@Model.Cidade/' + layer.feature.properties.geocode;
        //Redireciona para a página interna
        location.href = url;

        // Carregar dados para os graficos
        @* const _url_apicharts = '/api/v1/charts/' + layer.feature.properties.name;
        alert(_url_apicharts);
        fetch(_url_apicharts)
            .then(response => response.json())
            .then(data => {                
                $("#loader").hide();
                $(".blackboxload").fadeOut("slow");
                
                // Converter o objeto JSON em um array
                const jsonData = Object.values(data);

                jsonData.forEach(item => {
                    // Processar cada item do JSON aqui
                    alert(item.novasMes[0]); // Exemplo de processamento
                });
        })
        .catch(error => console.error('Erro ao carregar dados GeoJSON:', error)); *@
    }

    function highlightFeature(e) {
        var layer = e.target;

        layer.setStyle({
            weight: 3,
            color: 'black',
            dashArray: '',
            fillOpacity: 0.7
        });

        layer.bringToFront();
        info.update(layer.feature.properties);
    }

    function resetHighlight(e) {
        //geojson.resetStyle(e.target);
        var layer = e.target;

        layer.setStyle({
            weight: 1,
            color: 'black',
            dashArray: '',
            fillOpacity: 0.7
        });
        info.update();
    }

    function onEachFeature(feature, layer) {
        layer.on({
            mouseover: highlightFeature,
            mouseout: resetHighlight,
            click: zoomToFeature
        });
    }

    var legend = L.control({ position: 'bottomleft' });

    legend.onAdd = function (map) {

        var div = L.DomUtil.create('div', 'info legend collapsible'),
            grades = [0, 5000, 10000, 15000, 20000, 25000, 48000, 80000, 160000, 320000],
            labels = [];

        div.innerHTML += 'Empresas<div class="divider"></div>'
        // loop through our density intervals and generate a label with a colored square for each interval
        for (var i = 0; i < grades.length; i++) {
            div.innerHTML +=
                '<i style="background:' + getColor(grades[i] + 1) + '"></i> ' +
                grades[i] + (grades[i + 1] ? '&ndash;' + grades[i + 1] + '<br>' : '+');
        }

        return div;
    };

    // Adicionar uma camada base do OpenStreetMap
    L.tileLayer('https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png', {
        attribution: '© OpenStreetMap contributors'
    }).addTo(map);

    legend.addTo(map);
    info.addTo(map);

    // Carregar dados GeoJSON de uma API
    fetch('/api/v1/geojson/ram-sp/@Model.Cidade')
        .then(response => response.json())
        .then(data => {
            // Adicionar camada GeoJSON ao mapa
            var geojsonLayer = L.geoJSON(data, {
                style: style,
                onEachFeature: onEachFeature
            }).addTo(map);
            // Ajustar o mapa para abranger a área GeoJSON com zoom
            map.fitBounds(geojsonLayer.getBounds());
            $("#loader").hide();
            $(".blackboxload").fadeOut("slow");

        })
        .catch(error => console.error('Erro ao carregar dados GeoJSON:', error));

    function handle(e) {
        if (e.keyCode === 13) {
            var v = $("#input-search").val();
            if (v === "")
                return false;

            const url = '/maps/' + v;
            location.href = url;
        }
    }

</script>


<script>
    var _width = '100%';
    var _height = 250;
    var _height_2 = 250;

    var _novas_empresas_mensal = {
        series: [
            {
                name: "Tatal",
                data: [@Model.Charts!.NovasMes![0]]
            },
            {
                name: "MEIs",
                data: [@Model.Charts!.NovasMeiMes![0]]
            },
            {
                name: "MEs",
                data: [@Model.Charts!.NovasMEMes![0]]
            },
        {
            name: "EPPs",
            data: [@Model.Charts!.NovasEPPMes![0]]
            },
            {
            name: "Demais",
            data: [@Model.Charts!.NovasDemaisMes![0]]
            },
            {
                name: "Baixas",
                data: [@Model.Charts!.BaixasMes![0]]
            }
        ],
        chart: {
            height: 350,
            type: 'area',
            height: _height,
            width: _width,
            background: 'transparent',
            toolbar: {
                show: false
            },
            zoom: {
                enabled: false
            }
        },
        dataLabels: {
            enabled: true,
        },
        fill: {
            type: 'gradient',
            gradient: {
                shadeIntensity: 1,
                inverseColors: false,
                opacityFrom: 0.45,
                opacityTo: 0.05,
                stops: [20, 100, 100, 100]
            },
        },
        grid: {
            xaxis: {
                lines: {
                    show: true
                },
            },
            yaxis: {
                lines: {
                    show: false
                }
            }
        },
        markers: {
            size: 1
        },
        xaxis: {
            categories: [@Model.Charts!.NovasMes![1]],
        },
        yaxis: {

            title: {
                text: 'Empresas'
            },
            show: false
        },
        stroke: {
            curve: 'straight',
        },
        theme: {
            mode: 'light',
            palette: 'palette1'
        },
        legend: {
            position: 'top',
            horizontalAlign: 'right',
            offsetX: -10
        }
    };

    var _ativas = {

        series: [@Model.Charts!.MatrizFilial![0]],
        labels: [@Model.Charts!.MatrizFilial![1]],
        legend: {
            position: 'bottom',
        },
        chart: {
            type: 'donut',
            with: _width,
            height: _height,
            background: 'transparent'
        },

        plotOptions: {
            pie: {
                startAngle: -120,
                endAngle: 120,
                offsetY: 10,
                donut: {
                    labels: {
                        show: true,
                        total: {
                            show: true
                        }
                    }
                }
            }
        },
        grid: {
            padding: {
                bottom: -10
            }
        },
        theme: {
            mode: 'light',
            palette: 'palette1'
        },
        responsive: [{
            breakpoint: 480,
            options: {
                chart: {
                    width: _width
                },
                legend: {
                    position: 'bottom'
                }
            }
        }]
    };

    var _fiscal = {

        series: [@Model.Charts!.Fiscal![0]],
        labels: [@Model.Charts!.Fiscal![1]],
        legend: {
            position: 'bottom',
        },
        chart: {
            type: 'donut',
            with: _width,
            height: _height,
            background: 'transparent'

        },
        plotOptions: {
            pie: {
                startAngle: -120,
                endAngle: 120,
                offsetY: 10,
                donut: {
                    labels: {
                        show: true,
                        total: {
                            show: true
                        }
                    }
                }
            }
        },
        grid: {
            padding: {
                bottom: -10
            }
        },
        theme: {
            mode: 'light',
            palette: 'palette1'
        },
        responsive: [{
            breakpoint: 480,
            options: {
                chart: {
                    width: _width
                },
                legend: {
                    position: 'bottom'
                }
            }
        }]
    };

    var _porte = {
        series: [{
            name: '@Model.Charts!.LabelPorteFiscal![0]',
            data: [@Model.Charts!.PorteFiscal![0]]
        }, {
            name: '@Model.Charts!.LabelPorteFiscal![1]',
            data: [@Model.Charts!.PorteFiscal![1]]
        }, {
            name: '@Model.Charts!.LabelPorteFiscal![2]',
            data: [@Model.Charts!.PorteFiscal![2]]
        }],
        chart: {
            type: 'bar',
            height: _height,
            stacked: true,
            background: 'transparent',
            toolbar: {
                show: false
            },
            zoom: {
                enabled: false
            }
        },
        responsive: [{
            breakpoint: 480,
            options: {
                legend: {
                    position: 'bottom',
                    offsetX: -10,
                    offsetY: 0
                }
            }
        }],
        plotOptions: {
            bar: {
                horizontal: false,
                borderRadius: 0,
                dataLabels: {
                    total: {
                        enabled: true,
                        style: {
                            fontSize: '13px',
                            color: '#000',
                            fontWeight: 900
                        }
                    }
                }
            },
        },
        xaxis: {
            categories: ['ME', 'EPP', 'Demais'],
        },
        yaxis: {
            show: false
        },
        grid: {
            xaxis: {
                lines: {
                    show: true
                },
            },
            yaxis: {
                lines: {
                    show: false
                }
            }
        },
        legend: {
            position: 'bottom',
            offsetY: 0
        },
        theme: {
            mode: 'light',
            palette: 'palette1'
        },
        fill: {
            opacity: 1
        }
    };

    var _setores = {

        series: [@Model.Charts!.Setores![1]],
        labels: [@Model.Charts!.Setores![0]],
        legend: {
            position: 'bottom',
        },
        chart: {
            type: 'donut',
            with: _width,
            height: _height,
            background: 'transparent'
        },
        plotOptions: {
            pie: {
                startAngle: -120,
                endAngle: 120,
                offsetY: 10,
                donut: {
                    labels: {
                        show: true,
                        total: {
                            show: true
                        }
                    }
                }
            }
        },
        grid: {
            padding: {
                bottom: -10
            }
        },
        theme: {
            mode: 'light',
            palette: 'palette1'
        },
        responsive: [{
            breakpoint: 480,
            options: {
                chart: {
                    width: _width
                },
                legend: {
                    position: 'bottom'
                }
            }
        }]
    };

    var _maturidade = {
        plotOptions: {
            bar: {
                distributed: true
            }
        },
        chart: {
            type: 'bar',
            with: _width,
            height: _height,
            background: 'transparent',
            toolbar: {
                show: false
            },
            zoom: {
                enabled: false
            }
        },
        plotOptions: {
            bar: {
                horizontal: true,
            },
        },
        series: [{
            name: "Empresas",
            data: [@Model.Charts!.Maturidade],
        }],
        dataLabels: {
            enabled: true,
        },
        tooltip: {
            shared: true,
            intersect: false
        },
        theme: {
            mode: 'light',
            palette: 'palette1'
        },
        xaxis: {
            labels: {
                show: false
            },
            axisBorder: {
                show: false
            },
            axisTicks: {
                show: false
            },
            crosshairs: {
                show: false
            }
        },
        grid: {
            xaxis: {
                lines: {
                    show: false
                },
            },
            yaxis: {
                lines: {
                    show: false
                }
            }
        },
        legend: {
            floating: true,
            position: 'bottom',
            horizontalAlign: 'right',
            offsetY: -36
        }
    };

    var _rotatividade = {
        plotOptions: {
            bar: {
                distributed: true
            }
        },
        chart: {
            type: 'area',
            with: _width,
            height: _height,
            background: 'transparent',
            toolbar: {
                show: false
            },
            zoom: {
                enabled: false
            }
        },
        plotOptions: {
            bar: {
                horizontal: true,
            },
        },
        series: [{
            name: "Rotatividade",
            data: [@Model.Charts!.Rotatividade],
        }],
        dataLabels: {
            enabled: true,
            formatter: function (value) {
                return value + "%";
            }
        },
        tooltip: {
            shared: true,
            intersect: false,
            formatter: function (value) {
                return value + "%";
            }
        },
        theme: {
            mode: 'light',
            palette: 'palette1'
        },
        xaxis: {
            labels: {
                show: true
            },
            axisBorder: {
                show: false
            },
            axisTicks: {
                show: false
            },
            crosshairs: {
                show: false
            }
        },
        grid: {
            xaxis: {
                lines: {
                    show: true
                },
            },
            yaxis: {
                lines: {
                    show: false
                }
            }
        },
        fill: {
            type: 'gradient',
            gradient: {
                shadeIntensity: 1,
                inverseColors: false,
                opacityFrom: 0.45,
                opacityTo: 0.05,
                stops: [20, 100, 100, 100]
            },
        },
        stroke: {
            curve: 'straight',
        },
        legend: {
            floating: true,
            position: 'bottom',
            horizontalAlign: 'right',
            offsetY: -36
        }
    };

    var _naturezajuridica = {
        series: [@Model.Charts!.NaturezaJuridica![1]],
        labels: [@Model.Charts!.NaturezaJuridica![0]],
        legend: {
            position: 'bottom',
        },
        chart: {
            type: 'donut',
            with: _width,
            height: _height,
            background: 'transparent'
        },
        plotOptions: {
            pie: {
                startAngle: -120,
                endAngle: 120,
                offsetY: 10,
                donut: {
                    labels: {
                        show: true,
                        total: {
                            show: true
                        }
                    }
                }
            }
        },
        grid: {
            padding: {
                bottom: -10
            }
        },
        theme: {
            mode: 'light',
            palette: 'palette1'
        },
        responsive: [{
            breakpoint: 480,
            options: {
                chart: {
                    width: _width
                },
                legend: {
                    position: 'bottom'
                }
            }
        }]
    };

    var _naturezajuridica_ano = {
        series: [@Model.Charts!.NaturezaJuridica_Ano![1]],
        labels: [@Model.Charts!.NaturezaJuridica_Ano![0]],
        legend: {
            position: 'bottom',
        },
        chart: {
            type: 'donut',
            with: _width,
            height: 280,
            background: 'transparent'
        },
        plotOptions: {
            pie: {
                startAngle: -120,
                endAngle: 120,
                offsetY: 10,
                donut: {
                    labels: {
                        show: true,
                        total: {
                            show: true
                        }
                    }
                }
            }
        },
        grid: {
            padding: {
                bottom: -10
            }
        },
        theme: {
            mode: 'light',
            palette: 'palette1'
        },
        responsive: [{
            breakpoint: 480,
            options: {
                chart: {
                    width: _width
                },
                legend: {
                    position: 'bottom'
                }
            }
        }]
    }

    var _novas_empresas_mensal_ativas = {

        series: [@Model.Charts!.MatrizFilial_Ano![0]],
        labels: [@Model.Charts!.MatrizFilial_Ano![1]],
        legend: {
            position: 'bottom',
        },
        chart: {
            type: 'donut',
            with: _width,
            height: 270,
            background: 'transparent'
        },
        dataLabels: {
            enabled: false
        },
        plotOptions: {
            pie: {
                startAngle: -120,
                endAngle: 120,
                offsetY: 10,
                donut: {
                    labels: {
                        show: true,
                        total: {
                            show: true
                        }
                    }
                }
            }
        },
        theme: {
            mode: 'light',
            palette: 'palette1'
        },
        responsive: [{
            breakpoint: 480,
            options: {
                chart: {
                    width: _width
                },
                legend: {
                    position: 'bottom'
                }
            }
        }]
    };

    var _novas_empresas_mensal_fiscal = {

        series: [@Model.Charts!.Fiscal_Ano![0]],
        labels: [@Model.Charts!.Fiscal_Ano![1]],
        legend: {
            position: 'bottom',
        },
        chart: {
            type: 'donut',
            with: _width,
            height: 270,
            background: 'transparent'
        },
        dataLabels: {
            enabled: false
        },
        plotOptions: {
            pie: {
                startAngle: -120,
                endAngle: 120,
                offsetY: 10,
                donut: {
                    labels: {
                        show: true,
                        total: {
                            show: true
                        }
                    }
                }
            }
        },
        grid: {
            padding: {
                bottom: -10
            }
        },
        theme: {
            mode: 'light',
            palette: 'palette1'
        },
        responsive: [{
            breakpoint: 480,
            options: {
                chart: {
                    width: _width
                },
                legend: {
                    position: 'bottom'
                }
            }
        }]
    };

    var _novas_empresas_mensal_porte = {
        series: [{
            name: '@Model.Charts!.LabelPorteFiscal![0]',
            data: [@Model.Charts!.PorteFiscalAno![0]]
        }, {
            name: '@Model.Charts!.LabelPorteFiscal![1]',
            data: [@Model.Charts!.PorteFiscalAno![1]]
        }, {
            name: '@Model.Charts!.LabelPorteFiscal![2]',
            data: [@Model.Charts!.PorteFiscalAno![2]]
        }],
        chart: {
            type: 'bar',
            height: _height_2,
            stacked: true,
            background: 'transparent',
            toolbar: {
                show: false
            },
            zoom: {
                enabled: false
            }
        },
        yaxis: {
            show: false
        },
        grid: {
            xaxis: {
                lines: {
                    show: true
                },
            },
            yaxis: {
                lines: {
                    show: false
                }
            }
        },
        responsive: [{
            breakpoint: 480,
            options: {
                legend: {
                    position: 'bottom',
                    offsetX: -10,
                    offsetY: 0
                }
            }
        }],
        plotOptions: {
            bar: {
                horizontal: false,
                borderRadius: 0,
                dataLabels: {
                    total: {
                        enabled: true,
                        style: {
                            fontSize: '13px',
                            color: '#000',
                            fontWeight: 900
                        }
                    }
                }
            },
        },
        xaxis: {
            categories: ['ME', 'EPP', 'DEMAIS'],
        },
        legend: {
            position: 'bottom',
            offsetY: 0
        },
        theme: {
            mode: 'light',
            palette: 'palette1'
        },
        fill: {
            opacity: 1
        }
    };

    var _novas_empresas_mensal_setor = {

        series: [@Model.Charts!.SetoresAno![1]],
        labels: [@Model.Charts!.SetoresAno![0]],
        legend: {
            position: 'bottom',
        },
        chart: {
            type: 'donut',
            with: _width,
            height: 280,
            background: 'transparent'
        },
        dataLabels: {
            enabled: false
        },
        plotOptions: {
            pie: {
                startAngle: -120,
                endAngle: 120,
                offsetY: 10,
                donut: {
                    labels: {
                        show: true,
                        total: {
                            show: true
                        }
                    }
                }
            }
        },
        grid: {
            padding: {
                bottom: -10
            }
        },
        theme: {
            mode: 'light',
            palette: 'palette1'
        },
        responsive: [{
            breakpoint: 480,
            options: {
                chart: {
                    width: _width
                },
                legend: {
                    position: 'bottom'
                }
            }
        }]
    };

    var _evolucao_setorial = {
        series: [@Model.Charts!.CrescimentoSetorial![1]],
        chart: {
            type: 'area',
            stacked: false,
            height: _height,
            background: 'transparent',
            toolbar: {
                show: false
            },
            zoom: {
                enabled: false
            },
        },
        dataLabels: {
            enabled: false
        },
        markers: {
            size: 0,
        },
        grid: {
            xaxis: {
                lines: {
                    show: true
                },
            },
            yaxis: {
                lines: {
                    show: false
                }
            }
        },
        stroke: {
            curve: 'straight',
        },
        fill: {
            type: 'gradient',
            gradient: {
                shadeIntensity: 1,
                inverseColors: false,
                opacityFrom: 0.45,
                opacityTo: 0.05,
                stops: [20, 100, 100, 100]
            },
        },
        tooltip: {
            shared: true
        },
        legend: {
            position: 'top',
            horizontalAlign: 'right',
            offsetX: -10
        }
    };

    var _tx_evolucao_setorial = {
        series: [@Model.Charts!.TxCrescimentoSetorial![1]],
        chart: {
            type: 'area',
            stacked: false,
            height: _height,
            background: 'transparent',
            toolbar: {
                show: false
            },
            zoom: {
                enabled: false
            },
        },
        dataLabels: {
            enabled: false
        },
        markers: {
            size: 0,
        },
        grid: {
            xaxis: {
                lines: {
                    show: true
                },
            },
            yaxis: {
                lines: {
                    show: false
                }
            }
        },
        stroke: {
            curve: 'straight',
        },
        fill: {
            type: 'gradient',
            gradient: {
                shadeIntensity: 1,
                inverseColors: false,
                opacityFrom: 0.45,
                opacityTo: 0.05,
                stops: [20, 100, 100, 100]
            },
        },
        tooltip: {
            shared: true
        },
        legend: {
            position: 'top',
            horizontalAlign: 'right',
            offsetX: -10
        }
    };

    window.onload = function () {
        new ApexCharts(document.querySelector("#chart9_1"), _novas_empresas_mensal_ativas).render();
        new ApexCharts(document.querySelector("#chart9_2"), _novas_empresas_mensal_fiscal).render();
        new ApexCharts(document.querySelector("#chart9_3"), _novas_empresas_mensal_porte).render();
        new ApexCharts(document.querySelector("#chart9_4"), _novas_empresas_mensal_setor).render();
        new ApexCharts(document.querySelector("#chart_nj_ano"), _naturezajuridica_ano).render();

        new ApexCharts(document.querySelector("#chart9"), _novas_empresas_mensal).render();

        new ApexCharts(document.querySelector("#chart1"), _ativas).render();
        new ApexCharts(document.querySelector("#chart2"), _fiscal).render();
        new ApexCharts(document.querySelector("#chart3"), _porte).render();
        new ApexCharts(document.querySelector("#chart5"), _maturidade).render();
        new ApexCharts(document.querySelector("#chart6"), _rotatividade).render();

        new ApexCharts(document.querySelector("#chart4"), _setores).render();
        new ApexCharts(document.querySelector("#chart_nj"), _naturezajuridica).render();
        new ApexCharts(document.querySelector("#chart10"), _evolucao_setorial).render();

        new ApexCharts(document.querySelector("#chart_txsetorial"), _tx_evolucao_setorial).render();
    };

</script>
