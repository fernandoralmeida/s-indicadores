@page "/maps/{m?}"
@model Pages.Maps.IndexModel
@{
    Layout = "_LayoutMap";
    ViewData["Title"] = "Densidade Empresarial do Estado de SP";
}
<link rel="stylesheet" href="https://unpkg.com/leaflet@1.9.4/dist/leaflet.css" />
<link rel="stylesheet" href="~/css/site.css" asp-append-version="true" />
<script src="https://unpkg.com/leaflet@1.9.4/dist/leaflet.js"></script>

<div id="div-search" class="valign-wrapper">
    <input id="input-search" name="input-search" class="browser-default" type="search" placeholder="Procurar cidade"
         onkeypress="handle(event)" asp-for="@Model.Cidade"> 
    @* <datalist id="optcities">
        @foreach (var item in Model.ListaMunicipios!.OrderBy(o => o))
        {
            <option value="@item" />
        }
    </datalist> *@
    <i class="material-icons margin-y-5">search</i>
</div>

<div id="div-flutuante">
    <div class="conteudo">
        <h6>Município: @Model.Cidade?.ToUpper()</h6>
        <div class="divider"></div>
        @Model.Empresasativas
        <ul class="browser_default">
            Composição produtiva:
            @foreach (var item in @Model.Setores?.OrderByDescending(s => s.Value)!)
            {
                <li>@item.Key @item.Value %</li>
            }
        </ul>
        <div class="divider margin-b-10"></div>
        <a class="btn" asp-page="/Index">Voltar</a>
        <a asp-page="/Empresas/Index" asp-route-m="@Model.Cidade" class="btn"
            title="Ver detalhes da cidade @Model.Cidade">Ver Mais</a>
    </div>
</div>

<div id="map" class="map"></div>

<script>

    const _modelcidade = '@Model.Cidade';

    // Criar o mapa Leaflet
    var map = L.map('map').setView([-22.902778, -48.28125], 7); // Centro inicial do mapa do estado de sp

    //var info = L.control();

    //Não mostrar essas infor no map detalhes
    @* info.onAdd = function (map) {
        this._div = L.DomUtil.create('div', 'info'); // create a div with a class "info"
        this.update();
        return this._div;
        };

        // method that we will use to update the control based on feature properties passed
        info.update = function (props) {
        this._div.innerHTML =
        '<div class="center margin-b-10"><h6>Densidade Empresarial do Estado de SP<h6></div>'
        + '<div class="divider"></div>'
        + (props ?
        'Município: <span class="text-uppercase">' + props.name + '</span><br />Empresas: ' + props.empresas + '<br />Setor: ' + props.setor : 'Mova o mouse sobre o mapa');
        }; *@

        function getColor(d) {
            return d > 150000 ? '#800026' :
                d > 50000 ? '#BD0026' :
                    d > 25000 ? '#E31A1C' :
                        d > 20000 ? '#FC4E2A' :
                            d > 15000 ? '#FD8D3C' :
                                d > 10000 ? '#FEB24C' :
                                    d > 5000 ? '#FED976' :
                                        '#FFEDA0';
        }

    // Função para estilizar as áreas GeoJSON com base no valor da propriedade "empresas"
    function style(feature) {
        return {
            fillColor: getColor(feature.properties.empresas),
            weight: 1,
            opacity: 1,
            color: 'black',
            //dashArray: '3',
            fillOpacity: 0.7
        };
    }

    function zoomToFeature(e) {
        map.fitBounds(e.target.getBounds());

        var layer = e.target;
        const url = '/maps/' + layer.feature.properties.name;
        // Redireciona para a página interna
        location.href = url;
    }

    function highlightFeature(e) {
        var layer = e.target;

        layer.setStyle({
            weight: 3,
            color: 'black',
            dashArray: '',
            fillOpacity: 0.7
        });

        layer.bringToFront();
        //info.update(layer.feature.properties);
    }

    function resetHighlight(e) {
        //geojson.resetStyle(e.target);
        var layer = e.target;

        layer.setStyle({
            weight: 1,
            color: 'black',
            dashArray: '',
            fillOpacity: 0.7
        });
        //info.update();
    }

    function onEachFeature(feature, layer) {
        layer.on({
            mouseover: highlightFeature,
            mouseout: resetHighlight,
            click: zoomToFeature
        });
    }

    var legend = L.control({ position: 'bottomright' });

    legend.onAdd = function (map) {

        var div = L.DomUtil.create('div', 'info legend'),
            grades = [0, 5000, 10000, 15000, 20000, 25000, 50000, 150000],
            labels = [];

        div.innerHTML += 'Empresas<div class="divider"></div'
        // loop through our density intervals and generate a label with a colored square for each interval
        for (var i = 0; i < grades.length; i++) {
            div.innerHTML +=
                '<i style="background:' + getColor(grades[i] + 1) + '"></i> ' +
                grades[i] + (grades[i + 1] ? '&ndash;' + grades[i + 1] + '<br>' : '+');
        }

        return div;
    };

    // Adicionar uma camada base do OpenStreetMap
    L.tileLayer('https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png', {
        attribution: '© OpenStreetMap contributors'
    }).addTo(map);

    legend.addTo(map);
    //info.addTo(map);


    // Carregar dados GeoJSON de uma API
    fetch('/api/v1/geojson/@Model.Cidade')
        .then(response => response.json())
        .then(data => {

            $("#loader").hide();
            $(".blackboxload").fadeOut("slow");

            // Adicionar camada GeoJSON ao mapa
            var geojsonLayer = L.geoJSON(data, {
                style: style,
                onEachFeature: onEachFeature
            }).addTo(map);

            // Ajustar o mapa para abranger a área GeoJSON com zoom
            map.fitBounds(geojsonLayer.getBounds());
        })
        .catch(error => console.error('Erro ao carregar dados GeoJSON:', error));

    function handle(e) {
        if (e.keyCode === 13) {
            var v = $("#input-search").val();
            if (v === "")
                return false;

            const url = '/maps/' + v;
            location.href = url;
        }
    }

</script>
